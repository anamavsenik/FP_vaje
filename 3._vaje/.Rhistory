source('~/FAKS_financna matematika 3.letnik/financni praktikum/FP_vaje/3._vaje/Kravanja3.R')
install.packages(c("combinat", "Rlab"))
source('~/FAKS_financna matematika 3.letnik/financni praktikum/FP_vaje/3._vaje/Kravanja3.R')
binomski(50,1.05,0.95,0.03,5,rep(1,6),"put")
#b.)
N1 <- 10
source('~/FAKS_financna matematika 3.letnik/financni praktikum/FP_vaje/3._vaje/Kravanja3.R')
monte <- function(S0,u,d,R,T,W,type){
q<-(1+R-d)/(u-d)
binomskaf <- matrix(rbinom(N*t,1,q),nrow = N, ncol = t)
vektorS0 <- rep(S_0, N)
nova_binomskaf <- cbind(vektor_S_0,u^binomskaf * d^(1-binomskaf))
produkt <- t(apply(nova_binomskaf,1, cumprod))
izplacilo_vrstice <- apply(produkt, 1, izplacilo, W = W, type = type)
stevilo_u <- rowSums(binomskaf)
stevilo_d <- t - stevilo_u
Q <- q^stevilo_u * (1-q)^stevilo_d
E_Q <- sum(izplacilo_vrstice) / N
premija <- E_Q / (1+R)^t
return (premija)
}
S_0 <- 60
u <- 1.05
d <- 0.95
R <- 0.01
t <- 15
W <- rep(1,16)
type <- "put"
N1 <- 10
N2 <- 100
N3 <- 1000
b <- binomski(S_0,u,d,R,t,W,type)
library(combinat)
library(Rlab)
#1.naloga
S0<-50
u<-1.05
d<-0.95
T<-5
R <-0.03
W<-c(1,2,3,4,5,6)
#a.)
pot1 <-c(50.00,52.50,49.88,47.38,45.01,47.26)
pot2 <-c(50.00,52.50,55.12,57.88,60.78,63.81)
pot3 <- c(50.00,47.50,49.88,47.38,45.01,42.76)
pot4 <- c(50.00,47.50,45.12,47.38,45.01,47.26)
pot5 <-c(50.00,52.50,49.88,52.37,54.99,52.24)
K1<-sum(pot1*W)/sum(W)
K2<-sum(pot2*W)/sum(W)
K3<-sum(pot3*W)/sum(W)
K4 <-sum(pot4*W)/sum(W)
K5<-sum(pot5*W)/sum(W)
izplaciloX<-c(max(47.26-K1,0),max(63.81-K2,0),max(42.76-K3,0),max(47.26-K4,0),max(52.24-K5,0))
izplaciloY <- c(max(-47.26+K1,0),max(-63.81+K2,0),max(42.76-K3,0),max(-47.26+K4,0),max(-52.24+K5,0))
#b.)
izplacilo <- function(vrsta,W,type){
if (type == 'call'){
m <- max(tail(vrsta,n=1)-(sum(vrsta*W)/sum(W)),0)
return(m)
} else if (type == 'put'){
m <- max(-tail(vrsta,n=1)+(sum(vrsta*W)/sum(W)),0)
return(m)
}
}
#2.naloga
#a.)
binomski <- function(S0,u,d,R,T,W,type){
q<-(1+R-d)/(u-d)
ponovitev <- (rep(2,T))
kocka <- hcube(ponovitev)
gor <- kocka-1
dol <- 2-kocka
matrika <- u^gor*d^dol
zacetek <- rep(S0,nrow(matrika))
skupaj <- cbind(zacetek,matrika)
kumulativni_produkt <-t(apply(skupaj,1,cumprod))
premija <- apply(kumulativni_produkt,1,izplacilo, W=W, type=type)
Q <- q^(rowSums(gor))*(1-q)^(T-rowSums(gor))
E <- sum(Q*premija)/(1+R)^T
return(E)
}
#b.)
monte <- function(S0,u,d,R,T,W,type){
q<-(1+R-d)/(u-d)
binomskaf <- matrix(rbinom(N*t,1,q),nrow = N, ncol = t)
vektorS0 <- rep(S_0, N)
nova_binomskaf <- cbind(vektor_S_0,u^binomskaf * d^(1-binomskaf))
produkt <- t(apply(nova_binomskaf,1, cumprod))
izplacilo_vrstice <- apply(produkt, 1, izplacilo, W = W, type = type)
stevilo_u <- rowSums(binomskaf)
stevilo_d <- t - stevilo_u
Q <- q^stevilo_u * (1-q)^stevilo_d
E_Q <- sum(izplacilo_vrstice) / N
premija <- E_Q / (1+R)^t
return (premija)
}
S_0 <- 60
u <- 1.05
d <- 0.95
R <- 0.01
t <- 15
W <- rep(1,16)
type <- "put"
N1 <- 10
N2 <- 100
N3 <- 1000
b <- binomski(S_0,u,d,R,t,W,type)
monte(50,1.05,0.9,0.03,10,0:10,"call",100)
monte <- function(S0,u,d,R,T,W,type,N){
q<-(1+R-d)/(u-d)
binomskaf <- matrix(rbinom(N*t,1,q),nrow = N, ncol = t)
vektorS0 <- rep(S_0, N)
nova_binomskaf <- cbind(vektor_S_0,u^binomskaf * d^(1-binomskaf))
produkt <- t(apply(nova_binomskaf,1, cumprod))
izplacilo_vrstice <- apply(produkt, 1, izplacilo, W = W, type = type)
stevilo_u <- rowSums(binomskaf)
stevilo_d <- t - stevilo_u
Q <- q^stevilo_u * (1-q)^stevilo_d
E_Q <- sum(izplacilo_vrstice) / N
premija <- E_Q / (1+R)^t
return (premija)
}
S_0 <- 60
u <- 1.05
d <- 0.95
R <- 0.01
t <- 15
W <- rep(1,16)
type <- "put"
N1 <- 10
N2 <- 100
N3 <- 1000
b <- binomski(S_0,u,d,R,t,W,type)
monte(50,1.05,0.9,0.03,10,0:10,"call",100)
monte <- function(S0,u,d,R,T,W,type,N){
q<-(1+R-d)/(u-d)
binomskaf <- matrix(rbinom(N*t,1,q),nrow = N, ncol = t)
vektorS0 <- rep(S_0, N)
nova_binomskaf <- cbind(vektorS0,u^binomskaf * d^(1-binomskaf))
produkt <- t(apply(nova_binomskaf,1, cumprod))
izplacilo_vrstice <- apply(produkt, 1, izplacilo, W = W, type = type)
stevilo_u <- rowSums(binomskaf)
stevilo_d <- t - stevilo_u
Q <- q^stevilo_u * (1-q)^stevilo_d
E_Q <- sum(izplacilo_vrstice) / N
premija <- E_Q / (1+R)^t
return (premija)
}
S_0 <- 60
u <- 1.05
d <- 0.95
R <- 0.01
t <- 15
W <- rep(1,16)
type <- "put"
N1 <- 10
N2 <- 100
N3 <- 1000
b <- binomski(S_0,u,d,R,t,W,type)
monte(50,1.05,0.9,0.03,10,0:10,"call",100)
monte(70, 1.05, 1   , 0,7,c(0,rep(1,7)), "put",2000)
monte <- function(S_0,u,d,R,t,W,type, N){
q = (1+R-d) / (u-d)
binomska <- matrix(rbinom(N*t,1,q),nrow = N, ncol = t)
vektor_S_0 <- rep(S_0, N)
nova_binomska <- cbind(vektor_S_0,u^binomska * d^(1-binomska))
produkt <- t(apply(nova_binomska,1, cumprod))
izplacilo_po_vrsticah <- apply(produkt, 1, izplacilo, W = W, type = type)
stevilo_u <- rowSums(binomska)
stevilo_d <- t - stevilo_u
Q <- q^stevilo_u * (1-q)^stevilo_d
E_Q <- sum(izplacilo_po_vrsticah) / N
premija <- E_Q / (1+R)^t
return (premija)
}
S_0 <- 60
u <- 1.05
d <- 0.95
R <- 0.01
t <- 15
W <- rep(1,16)
type <- "put"
N1 <- 10
N2 <- 100
N3 <- 1000
b <- binomski(S_0,u,d,R,t,W,type)
monte(50,1.05,0.9,0.03,10,0:10,"call",100)
monte(70, 1.05, 1   , 0,7,c(0,rep(1,7)), "put",2000)
monte(90, 1.15, 0.8 , 0.01, 10,11:1, "call",50000)
binomski <- function(S_0,u,d,R,t,W,type){
q = (1+R-d) / (u-d)
kocka <- hcube(rep(2,t)) - 1
vektor_S_0 <- rep(S_0, 2^(t))
nova_kocka <- cbind(vektor_S_0,u^kocka * d^(1-kocka))
produkt <- t(apply(nova_kocka,1, cumprod))
izplacilo_po_vrsticah <- apply(produkt, 1, izplacilo, W = W, type = type)
stevilo_u <- rowSums(kocka)
stevilo_d <- t - stevilo_u
Q <- q^stevilo_u * (1-q)^stevilo_d
E_Q <- sum(izplacilo_po_vrsticah * Q)
premija <- E_Q / (1+R)^t
return (premija)
}
binomski(90, 1.15, 0.8 , 0.01, 11,rep(c(1,0),6), "call")
binomski(80, 1.1 , 0.95, 0.05,  9, 12:3, "put" )
monte <- function(S_0,u,d,R,t,W,type, N){
q = (1+R-d) / (u-d)
binomska <- matrix(rbinom(N*t,1,q),nrow = N, ncol = t)
vektor_S_0 <- rep(S_0, N)
nova_binomska <- cbind(vektor_S_0,u^binomska * d^(1-binomska))
produkt <- t(apply(nova_binomska,1, cumprod))
izplacilo_po_vrsticah <- apply(produkt, 1, izplacilo, W = W, type = type)
stevilo_u <- rowSums(binomska)
stevilo_d <- t - stevilo_u
Q <- q^stevilo_u * (1-q)^stevilo_d
E_Q <- sum(izplacilo_po_vrsticah) / N
premija <- E_Q / (1+R)^t
return (premija)
}
S_0 <- 60
u <- 1.05
d <- 0.95
R <- 0.01
t <- 15
W <- rep(1,16)
type <- "put"
N1 <- 10
N2 <- 100
N3 <- 1000
b <- binomski(S_0,u,d,R,t,W,type)
monte(50,1.05,0.9,0.03,10,0:10,"call",100)
monte <- function(S_0,u,d,R,t,W,type, N){
q = (1+R-d) / (u-d)
binomskaf <- matrix(rbinom(N*t,1,q),nrow = N, ncol = t)
vS_0 <- rep(S_0, N)
nova_binomskaf <- cbind(vS_0,u^binomskaf * d^(1-binomskaf))
produkt <- t(apply(nova_binomskaf,1, cumprod))
izplacilo_vrstice <- apply(produkt, 1, izplacilo, W = W, type = type)
stevilo_u <- rowSums(binomskaff)
stevilo_d <- t - stevilo_u
Q <- q^stevilo_u * (1-q)^stevilo_d
E_Q <- sum(izplacilo_vrstice) / N
premija <- E_Q / (1+R)^t
return (premija)
}
S_0 <- 60
u <- 1.05
d <- 0.95
R <- 0.01
t <- 15
W <- rep(1,16)
type <- "put"
N1 <- 10
N2 <- 100
N3 <- 1000
b <- binomski(S_0,u,d,R,t,W,type)
monte(50,1.05,0.9,0.03,10,0:10,"call",100)
monte <- function(S_0,u,d,R,t,W,type, N){
q = (1+R-d) / (u-d)
binomskaf <- matrix(rbinom(N*t,1,q),nrow = N, ncol = t)
vS_0 <- rep(S_0, N)
nova_binomskaf <- cbind(vS_0,u^binomskaf * d^(1-binomskaf))
produkt <- t(apply(nova_binomskaf,1, cumprod))
izplacilo_vrstice <- apply(produkt, 1, izplacilo, W = W, type = type)
stevilo_u <- rowSums(binomskaf)
stevilo_d <- t - stevilo_u
Q <- q^stevilo_u * (1-q)^stevilo_d
E_Q <- sum(izplacilo_vrstice) / N
premija <- E_Q / (1+R)^t
return (premija)
}
monte(50,1.05,0.9,0.03,10,0:10,"call",100)
monte(70, 1.05, 1   , 0,7,c(0,rep(1,7)), "put",2000)
monte(90, 1.15, 0.8 , 0.01, 10,11:1, "call",50000)
#3. naloga
#3.a
M = 100
simulacija_1 <- c()
for(i in 1:M ){
simulacija_1 <- c(simulacija_1,monte(S_0,u,d,R,t,W,type, N1))
}
simulacija_2 <- c()
for(i in 1:M ){
simulacija_2 <- c(simulacija_2,monte(S_0,u,d,R,t,W,type, N2))
}
simulacija_3 <- c()
for(i in 1:M ){
simulacija_3 <- c(simulacija_3,monte(S_0,u,d,R,t,W,type, N3))
}
hist(simulacija_1)
hist(simulacija_2)
hist(simulacija_3)
#3.b
hist(simulacija_1)
abline(v = c(mean(simulacija_1),b ))
arrows(mean(simulacija_1) , 0, mean(simulacija_1) + sd(simulacija_1),0)
arrows(mean(simulacija_1) , 0, mean(simulacija_1) - sd(simulacija_1),0)
M = 100
simulacija_1 <- c()
for(i in 1:M ){
simulacija_1 <- c(simulacija_1,monte(S_0,u,d,R,t,W,type, N1))
}
simulacija_2 <- c()
for(i in 1:M ){
simulacija_2 <- c(simulacija_2,monte(S_0,u,d,R,t,W,type, N2))
}
simulacija_3 <- c()
for(i in 1:M ){
simulacija_3 <- c(simulacija_3,monte(S_0,u,d,R,t,W,type, N3))
}
hist(simulacija_1)
hist(simulacija_2)
hist(simulacija_3)
#3.b
hist(simulacija_1)
abline(v = c(mean(simulacija_1),b ))
arrows(mean(simulacija_1) , 0, mean(simulacija_1) + sd(simulacija_1),0)
arrows(mean(simulacija_1) , 0, mean(simulacija_1) - sd(simulacija_1),0)
simulacija1 <- c()
for(i in 1:M ){
simulacija1 <- c(simulacija1,monte(S_0,u,d,R,t,W,type, N1))
}
hist(simulacija1)
hist(simulacija1,col="yellow")
M = 100
simulacija1 <- c()
for(i in 1:M ){
simulacija1 <- c(simulacija1,monte(S_0,u,d,R,t,W,type, N1))
}
M = 100
simulacija1 <- c()
for(i in 1:M ){
simulacija1 <- c(simulacija1,monte(S_0,u,d,R,t,W,type, N1))
}
simulacija2 <- c()
for(i in 1:M ){
simulacija2 <- c(simulacija2,monte(S_0,u,d,R,t,W,type, N2))
}
simulacija3 <- c()
for(i in 1:M ){
simulacija3 <- c(simulacija3,monte(S_0,u,d,R,t,W,type, N3))
}
hist(simulacija1,col="yellow")
hist(simulacija2,col="green")
hist(simulacija3,col="blue")
hist(simulacija1,col="yellow")
hist(simulacija2,col="green")
hist(simulacija3,col="blue")
#3.b
hist(simulacija1)
abline(v = c(mean(simulacija1),b ))
arrows(mean(simulacija1) , 0, mean(simulacija1) + sd(simulacija1),0)
arrows(mean(simulacija1) , 0, mean(simulacija1) - sd(simulacija1),0)
hist(simulacija1)
abline(v = c(mean(simulacija1),b ),col="red")
arrows(mean(simulacija1) , 0, mean(simulacija1) + sd(simulacija1),0)
arrows(mean(simulacija1) , 0, mean(simulacija1) - sd(simulacija1),0)
bin <- binomski(S_0,u,d,R,t,W,type)
#3. naloga
#3.a
M = 100
simulacija1 <- c()
for(i in 1:M ){
simulacija1 <- c(simulacija1,monte(S_0,u,d,R,t,W,type, N1))
}
simulacija2 <- c()
for(i in 1:M ){
simulacija2 <- c(simulacija2,monte(S_0,u,d,R,t,W,type, N2))
}
simulacija3 <- c()
for(i in 1:M ){
simulacija3 <- c(simulacija3,monte(S_0,u,d,R,t,W,type, N3))
}
hist(simulacija1,col="yellow")
hist(simulacija2,col="green")
hist(simulacija3,col="blue")
#3.b
hist(simulacija1)
abline(v = c(mean(simulacija1),bin ),col="red")
arrows(mean(simulacija1) , 0, mean(simulacija1) + sd(simulacija1),0)
arrows(mean(simulacija1) , 0, mean(simulacija1) - sd(simulacija1),0)
hist(simulacija1,col="yellow",main="histogram simulacije 1",
xlab="porazdelitev ocen premije",ylab= "pogostost")
hist(simulacija2,col="green",main="histogram simulacije 2",
xlab="porazdelitev ocen premije",ylab= "pogostost")
hist(simulacija3,col="blue",main="histogram simulacije 3",
xlab="porazdelitev ocen premije",ylab= "pogostost")
monte <- function(S_0,u,d,R,t,W,type, N){
q = (1+R-d) / (u-d)
binomskaf <- matrix(rbinom(N*t,1,q),nrow = N, ncol = t)
vS_0 <- rep(S_0, N)
nova_binomskaf <- cbind(vS_0,u^binomskaf * d^(1-binomskaf))
produkt <- t(apply(nova_binomskaf,1, cumprod))
izplacilo_vrstice <- apply(produkt, 1, izplacilo, W = W, type = type)
stevilo_u <- rowSums(binomskaf)
stevilo_d <- t - stevilo_u
Q <- q^stevilo_u * (1-q)^stevilo_d
E_Q <- sum(izplacilo_vrstice) / N
premija <- E_Q / (1+R)^t
return (premija)
}
monte <- function(S_0,u,d,R,t,W,type, N){
q = (1+R-d) / (u-d)
binomskaf <- matrix(rbinom(N*t,1,q),nrow = N, ncol = t)
vS_0 <- rep(S_0, N)
nova_binomskaf <- cbind(vS_0,u^binomskaf * d^(1-binomskaf))
produkt <- t(apply(nova_binomskaf,1, cumprod))
izplacilo_vrstice <- apply(produkt, 1, izplacilo, W = W, type = type)
stevilo_u <- rowSums(binomskaf)
stevilo_d <- t - stevilo_u
Q <- q^stevilo_u * (1-q)^stevilo_d
E_Q <- sum(izplacilo_vrstice) / N
premija <- E_Q / (1+R)^t
return (premija)
}
monte(50,1.05,0.9,0.03,10,0:10,"call",100)
monte(70, 1.05, 1   , 0,7,c(0,rep(1,7)), "put",2000)
monte(90, 1.15, 0.8 , 0.01, 10,11:1, "call",50000)
monte <- function(S_0,u,d,R,t,W,type, N){
q = (1+R-d) / (u-d)
binomskaf <- matrix(rbinom(N*t,1,q),nrow = N, ncol = t)
vS_0 <- rep(S_0, N)
nova_binomskaf <- cbind(vS_0,u^binomskaf * d^(1-binomskaf))
produkt <- t(apply(nova_binomskaf,1, cumprod))
izplacilo_vrstice <- apply(produkt, 1, izplacilo, W = W, type = type)
Q <- q^rowSums(binomskaf) * (1-q)^(t - stevilo_u)
E_Q <- sum(izplacilo_vrstice) / N
premija <- E_Q / (1+R)^t
return (premija)
}
monte(90, 1.15, 0.8 , 0.01, 10,11:1, "call",50000)
monte <- function(S_0,u,d,R,t,W,type, N){
q = (1+R-d) / (u-d)
binomskaf <- matrix(rbinom(N*t,1,q),nrow = N, ncol = t)
vS_0 <- rep(S_0, N)
nova_binomskaf <- cbind(vS_0,u^binomskaf * d^(1-binomskaf))
produkt <- t(apply(nova_binomskaf,1, cumprod))
izplacilo_vrstice <- apply(produkt, 1, izplacilo, W = W, type = type)
Q <- q^rowSums(binomskaf) * (1-q)^(t - rowSums(binomskaf) )
E_Q <- sum(izplacilo_vrstice) / N
premija <- E_Q / (1+R)^t
return (premija)
}
monte(90, 1.15, 0.8 , 0.01, 10,11:1, "call",50000)
monte(50,1.05,0.9,0.03,10,0:10,"call",100)
4.70097
