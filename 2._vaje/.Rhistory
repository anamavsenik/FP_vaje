source('~/FAKS_financna matematika 3.letnik/financni praktikum/FP_vaje/2._vaje/Kravanja2.R')
install.packages("actuar")
source('~/FAKS_financna matematika 3.letnik/financni praktikum/FP_vaje/2._vaje/Kravanja2.R')
vzorec <- read.delim("vzorec2.txt",header = FALSE)
hist(vzorec$V1, main="histogram",
xlab="vzorec",ylab= "pogostost pojavljanja",
border="green", col="yellow")
#b.)
parametri <- mde(vzorec$V1,fun = pweibull,
start = list(shape= 1.5, scale= 1),
measure = 'CvM')
#c.)
k <- as.numeric(parametri$estimate[1])
lambda <- as.numeric(parametri$estimate[2])
hist(vzorec$V1, main="histogram",
xlab="vzorec",ylab= "pogostost pojavljanja",
border="green", col="yellow")
curve(dweibull(x, shape=k, scale = lambda),
from = 0,
to = 7,
col = "red",
lwd = 2)
plot(ecdf(vzorec$V1),
main = 'Porazdelitvena funkcija odškodnin',
ylab = 'porazdelitvena funkcija',
xlab = 'višina odškodnin')
curve(pweibull(x, shape=k, scale = lambda),
from = 0,
to = 7,
add = TRUE,
col = "red",
lwd = 2) #komulativna je pweibull
#d.)
n <-20
p <- 1/2
upanjey <- lambda * gamma(1 + (1/k))
upanjen <- n*p
upanjeS <- upanjey * upanjen
variancay <- lambda^2 * (gamma(1+ (2/k)) - gamma (1+ (1/k))^2)
variancan <- n*p* (1-p)
upanjeyna2 <- varianca_y + upanjey^2
variancaS <- variancay * upanjen + variancan * upanjeyna2
# 2.)
# a.)
h <- 0.25
n <- 38
diskretno <- discretize(pweibull (x,shape=k, scale = lambda),
step = 0.25,
from = 0,
to = 10,
method = 'rounding')
#b.)
graf1 <- curve(pweibull(x, shape=k, scale = lambda),
from = 0,
to = 10,
main = 'Weibullova porazdelitev',
ylab = 'porazdelitvena funkcija',
lwd = 2)
plot(stepfun(seq.int(0,n*h,by=h),y = diskretno), add=TRUE)
plot(stepfun(seq.int(0,n*h,by=h),y = diskretno),
add=TRUE,
color = Orange)
plot(stepfun(seq.int(0,n*h,by=h),y = diskretno),
add=TRUE,
col = "Orange")
plot(stepfun(seq.int(0,n*h,by=h),y = diskretno),
add=TRUE,
col = "Orange")
legend("bottomright", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('orange','black'),lty=1:1, cex=0.8)
legend("bottomleft", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('orange','black'),lty=1:1, cex=0.8)
legend("bottomleft", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('orange','black'),lty=3:1, cex=0.8)
legend("bottomleft", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('orange','black'),lty=1:1, cex=0.8)
legend("bottomleft", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('orange','black'),lty=1:1, cex=0.5)
graf1 <- curve(pweibull(x, shape=k, scale = lambda),
from = 0,
to = 10,
main = 'Weibullova porazdelitev',
ylab = 'porazdelitvena funkcija',
lwd = 2)
plot(stepfun(seq.int(0,n*h,by=h),y = diskretno),
add=TRUE)
legend("bottomleft", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('orange','black'),lty=1:1, cex=0.5)
legend("topleft", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('orange','black'),lty=1:1, cex=0.5)
graf1 <- curve(pweibull(x, shape=k, scale = lambda),
from = 0,
to = 10,
main = 'Weibullova porazdelitev',
ylab = 'porazdelitvena funkcija',
lwd = 2)
plot(stepfun(seq.int(0,n*h,by=h),y = diskretno),
add=TRUE)
legend("topleft", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('orange','black'),lty=1:1, cex=0.5)
legend("topleft", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('orange','black'),lty=1:1, cex=0.7)
#b.)
graf1 <- curve(pweibull(x, shape=k, scale = lambda),
from = 0,
to = 10,
main = 'Weibullova porazdelitev',
ylab = 'porazdelitvena funkcija',
lwd = 2,
col= 'orange')
plot(stepfun(seq.int(0,n*h,by=h),y = diskretno),
add=TRUE)
legend("topleft", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('orange','black'),lty=1:1, cex=0.7)
diskretno <- discretize(pweibull (x,shape=k, scale = lambda),
step = 0.25,
from = 0,
to = 10,
method = 'rounding')
#b.)
graf1 <- curve(pweibull(x, shape=k, scale = lambda),
from = 0,
to = 10,
main = 'Weibullova porazdelitev',
ylab = 'porazdelitvena funkcija',
lwd = 2,
col= 'orange')
plot(stepfun(seq.int(0,n*h,by=h),y = diskretno),
add=TRUE)
legend("topleft", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('black','orange'),lty=1:1, cex=0.7)
#b.)
graf1 <- curve(dweibull(x, shape=k, scale = lambda),
from = 0,
to = 10,
main = 'Weibullova porazdelitev',
ylab = 'porazdelitvena funkcija',
lwd = 2,
col= 'orange')
plot(stepfun(seq.int(0,n*h,by=h),y = diskretno),
add=TRUE)
diskretno <- discretize(dweibull (x,shape=k, scale = lambda),
step = 0.25,
from = 0,
to = 10,
method = 'rounding')
#b.)
graf1 <- curve(dweibull(x, shape=k, scale = lambda),
from = 0,
to = 10,
main = 'Weibullova porazdelitev',
ylab = 'porazdelitvena funkcija',
lwd = 2,
col= 'orange')
plot(stepfun(seq.int(0,n*h,by=h),y = diskretno),
add=TRUE)
legend("topleft", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('black','orange'),lty=1:1, cex=0.7)
diskretno <- discretize(pweibull (x,shape=k, scale = lambda),
step = 0.25,
from = 0,
to = 10,
method = 'rounding')
#b.)
graf1 <- curve(dweibull(x, shape=k, scale = lambda),
from = 0,
to = 10,
main = 'Weibullova porazdelitev',
ylab = 'porazdelitvena funkcija',
lwd = 2,
col= 'orange')
plot(stepfun(seq.int(0,n*h,by=h),y = diskretno),
add=TRUE)
legend("topleft", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('black','orange'),lty=1:1, cex=0.7)
legend("topright", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('black','orange'),lty=1:1, cex=0.7)
graf1 <- curve(dweibull(x, shape=k, scale = lambda),
from = 0,
to = 10,
main = 'Weibullova porazdelitev',
ylab = 'porazdelitvena funkcija',
lwd = 2,
col= 'orange')
plot(stepfun(seq.int(0,n*h,by=h),y = diskretno),
add=TRUE)
legend("topright", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('black','orange'),lty=1:1, cex=0.7)
FS <- aggregateDist(method = 'recursive',
model.freq = 'poisson',
model.sev = diskretno,
lambda = 15,
x.scale = 0.25,
maxit = 10000000,
tol = 0.005)
plot(Fs,
main = 'Porazdelitvena funkcija odškodnin',
xlab = 'Višina odškodnine')
plot(FS,
main = 'Porazdelitvena funkcija odškodnin',
xlab = 'Višina odškodnine')
FS <- aggregateDist(method = 'recursive',
model.freq = 'poisson',
model.sev = diskretno,
lambda = 10,
x.scale = 0.25,
maxit = 10000,
tol = 0.005)
plot(FS,
main = 'Porazdelitvena funkcija odškodnin',
xlab = 'Višina odškodnine')
FS <- aggregateDist(method = 'recursive',
model.freq = 'poisson',
model.sev = diskretno,
lambda = 10,
x.scale = 0.25,
maxit = 1000000,
tol = 0.005)
plot(FS,
main = 'Porazdelitvena funkcija odškodnin',
xlab = 'Višina odškodnine')
FS <- aggregateDist(method = 'recursive',
model.freq = 'poisson',
model.sev = diskretno,
lambda = 30,
x.scale = 0.25,
maxit = 1000000,
tol = 0.005)
plot(FS,
main = 'Porazdelitvena funkcija odškodnin',
xlab = 'Višina odškodnine')
FS <- aggregateDist(method = 'recursive',
model.freq = 'poisson',
model.sev = diskretno,
lambda = 60,
x.scale = 0.25,
maxit = 1000000,
tol = 0.005)
plot(FS,
main = 'Porazdelitvena funkcija odškodnin',
xlab = 'Višina odškodnine')
FS <- aggregateDist(method = 'recursive',
model.freq = 'poisson',
model.sev = diskretno,
lambda = 20,
x.scale = 0.25,
maxit = 1000000,
tol = 0.005)
plot(FS,
main = 'Porazdelitvena funkcija odškodnin',
xlab = 'Višina odškodnine')
FS <- aggregateDist(method = 'recursive',
model.freq = 'poisson',
model.sev = diskretno,
lambda = 7,
x.scale = 0.25,
maxit = 1000000,
tol = 0.005)
plot(FS,
main = 'Porazdelitvena funkcija odškodnin',
xlab = 'Višina odškodnine')
FS <- aggregateDist(method = 'recursive',
model.freq = 'poisson',
model.sev = diskretno,
lambda = lambda,
x.scale = 0.25,
maxit = 1000000,
tol = 0.005)
plot(FS,
main = 'Porazdelitvena funkcija odškodnin',
xlab = 'Višina odškodnine')
upanjedrugoS <- mean(FS)
variancadrugaS <- sum(knots(FS)^2 * diff(FS)) - upanjedrugoS^2
